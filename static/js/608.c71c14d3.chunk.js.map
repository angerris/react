{"version":3,"file":"static/js/608.c71c14d3.chunk.js","mappings":"0OAmBO,SAASA,EAAUC,GACxB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbC,KAAM,IAERC,SAAU,WACRL,EAAMM,SACR,EAAEC,UAEFC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,UAAU,UAASH,SAAA,EACvBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,cACJC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,cAAaH,SAAA,EAC1BN,EAAAA,EAAAA,KAAA,SACEU,YAAY,qBACZC,KAAK,OACLC,MAAOb,EAAMc,YACbC,SAAUf,EAAMgB,aAChBN,UAAU,kBAEZT,EAAAA,EAAAA,KAAA,UAAQW,KAAK,SAASF,UAAU,kBAAiBH,SAAC,mBAO5D,CACO,SAASU,EAAKjB,GACnB,OACEQ,EAAAA,EAAAA,MAAA,OAAKE,UAAU,UAASH,SAAA,EACtBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,cACJN,EAAAA,EAAAA,KAAA,OAAAM,SAAMP,EAAMI,SAGlB,C,4CCpBO,SAASc,EAASlB,GACvB,OACEQ,EAAAA,EAAAA,MAAA,OAAKE,UAAU,WAAUH,SAAA,EACvBC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,eAAcH,SAAA,CAC1BP,EAAMmB,OACLlB,EAAAA,EAAAA,KAAA,OACEmB,IAAKpB,EAAMmB,MACXE,IAAI,GACJC,OAAO,GACPC,MAAO,GACPb,UAAU,iBAGZT,EAAAA,EAAAA,KAAA,OAAKmB,IAAKI,EAAKH,IAAI,GAAGC,OAAO,GAAGC,MAAO,GAAIb,UAAU,iBAEvDT,EAAAA,EAAAA,KAAA,OAAAM,SAAM,IAAMP,EAAMyB,eAGpBxB,EAAAA,EAAAA,KAAA,OAAAM,SAAMP,EAAM0B,WACZzB,EAAAA,EAAAA,KAAA,OAAAM,UACEC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,YAAWH,SAAA,EACxBN,EAAAA,EAAAA,KAAC0B,EAAAA,EAAe,CAACC,KAAMC,EAAAA,MAAW,IAAE7B,EAAM8B,iBAKpD,CAEA,IACA,GADyBC,EAAAA,EAAAA,KApDH,SAACC,GAErB,MAAO,CACLlB,YAAakB,EAAMC,YAAYnB,YAC/BV,KAAM4B,EAAMC,YAAYC,UAAUC,KAAI,SAACC,GAAC,OACtCnC,EAAAA,EAAAA,KAACiB,EAAQ,CACPC,MAAOa,EAAMC,YAAYI,QAAQC,OAAOC,MACxCb,QAASU,EAAEV,QACXI,UAAWM,EAAEN,UACbL,SAAUO,EAAMC,YAAYI,QAAQZ,UACpC,IAGR,IACyB,SAACe,GACxB,MAAO,CACLlC,QAAS,WACPkC,GAASC,EAAAA,EAAAA,MACX,EACAC,eAAgB,SAACC,GACfH,GAASI,EAAAA,EAAAA,IAA0BD,GACrC,EAEJ,GA6ByBZ,ED5DV,SAAiB/B,GAQ9B,OACEC,EAAAA,EAAAA,KAAA4C,EAAAA,SAAA,CAAAtC,UACEC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,mBAAkBH,SAAA,EAC/BN,EAAAA,EAAAA,KAACF,GAAS+C,EAAAA,EAAAA,GAAA,CAACxC,QAVH,WACZN,EAAMM,SACR,EAQmCU,aAPhB,SAAC+B,GAClB,IAAIJ,EAAOI,EAAEC,OAAOnC,MACpBb,EAAM0C,eAAeC,EACvB,GAImE3C,KAC7DC,EAAAA,EAAAA,KAACgB,GAAI6B,EAAAA,EAAAA,GAAA,GAAK9C,QAIlB,I,0DEjBA,GAAiB,E,oBCCF,SAASiD,EAAaC,GAA4B,IAAzBC,EAAMD,EAANC,OAAQC,EAAYF,EAAZE,aAC9CC,GAA0BC,EAAAA,EAAAA,UAASH,GAAOI,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,IAS5BG,EAAAA,EAAAA,YAAU,WACRL,EAASP,EACX,GAAG,CAACA,IAMJ,OACElD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,kBAAiBH,SAC7BsD,GACC5D,EAAAA,EAAAA,KAAA,SACES,UAAU,sBACVsD,WAAW,EACXC,OAnBY,WAClBb,EAAaK,GACbK,GAAY,EACd,EAiBQ/C,SAXiB,SAACgC,GACxBW,EAASX,EAAEmB,cAAcrD,MAC3B,EAUQA,MAAO4C,KAGTjD,EAAAA,EAAAA,MAAA,QAAME,UAAU,SAASyD,cA1BZ,WAAH,OAASL,GAAY,EAAM,EA0BcvD,SAAA,CAChDkD,GAAS,YAAa,QAMjC,CC/Be,SAASW,EAAYpE,GAClC,IAAMqE,EAAkB,SAACtB,GACnBA,EAAEC,OAAOsB,MAAMC,QACjBvE,EAAMwE,eAAezB,EAAEC,OAAOsB,MAAM,GAExC,EAEMG,EAAazE,EAAMqC,QAAQC,OAAOC,MACxC,OACEtC,EAAAA,EAAAA,KAAA,OAAKS,UAAWgE,EAAEC,YAAYpE,UAC5BC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,aAAYH,SAAA,EACzBN,EAAAA,EAAAA,KAAA,OAAKmB,IAAKwD,EAAIvD,IAAI,GAAGX,UAAU,eAC/BT,EAAAA,EAAAA,KAAA,OAAAM,SACIkE,GAmBAjE,EAAAA,EAAAA,MAAA,OAAKE,UAAU,eAAcH,SAAA,EAC3BN,EAAAA,EAAAA,KAAA,OAAKmB,IAAKqD,EAAYpD,IAAI,GAAGX,UAAU,QACtCV,EAAM6E,SACLrE,EAAAA,EAAAA,MAAA,SAAOsE,MAAM,qBAAoBvE,SAAA,EAC/BN,EAAAA,EAAAA,KAAC0B,EAAAA,EAAe,CAACC,KAAMmD,EAAAA,IAAUrE,UAAU,SAC3CT,EAAAA,EAAAA,KAAA,SACES,UAAU,YACVE,KAAK,OACLoE,KAAM,GACNjE,SAAU,SAACgC,GACTsB,EAAgBtB,EAClB,OAGF,SAhCNvC,EAAAA,EAAAA,MAAA,OAAKE,UAAU,eAAcH,SAAA,EAC3BN,EAAAA,EAAAA,KAAA,OAAKmB,IAAKI,EAAKH,IAAI,GAAGX,UAAU,QAC/BV,EAAM6E,SACLrE,EAAAA,EAAAA,MAAA,SAAOsE,MAAM,qBAAoBvE,SAAA,EAC/BN,EAAAA,EAAAA,KAAC0B,EAAAA,EAAe,CAACC,KAAMmD,EAAAA,IAAUrE,UAAU,SAE3CT,EAAAA,EAAAA,KAAA,SACES,UAAU,YACVE,KAAK,OACLoE,KAAM,GACNjE,SAAU,SAACgC,GACTsB,EAAgBtB,EAClB,OAGF,WAqBV9C,EAAAA,EAAAA,KAACgD,EAAa,CACZE,OAAQnD,EAAMmD,OACdC,aAAcpD,EAAMoD,gBAEtBnD,EAAAA,EAAAA,KAAA,OAAKS,UAAU,WAAUH,SAAE,IAAMP,EAAMqC,QAAQZ,eAIvD,CC/De,SAASwD,EAASjF,GAC/B,OACEQ,EAAAA,EAAAA,MAAA,OAAKE,UAAU,WAAUH,SAAA,EACvBN,EAAAA,EAAAA,KAACiF,EAAO,CAACC,QAASnF,EAAMqC,QAAQ8C,WAChClF,EAAAA,EAAAA,KAACmF,EAAO,MAGd,CACO,SAASF,EAAQlF,GACtB,OACEQ,EAAAA,EAAAA,MAAA,OAAKE,UAAU,UAASH,SAAA,EACtBN,EAAAA,EAAAA,KAAA,MAAAM,SAAI,aACHP,EAAMmF,UAGb,CACO,SAASC,EAAQpF,GACtB,OACEQ,EAAAA,EAAAA,MAAA,OAAKE,UAAU,UAASH,SAAA,EACtBN,EAAAA,EAAAA,KAAC0B,EAAAA,EAAe,CAACC,KAAMyD,EAAAA,OAEvBpF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAe,CAACC,KAAMyD,EAAAA,OAEvBpF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAe,CAACC,KAAMyD,EAAAA,OAEvBpF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAe,CAACC,KAAMyD,EAAAA,QAG7B,CC5Be,SAASC,EAAQtF,GAC9B,OACEQ,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEN,EAAAA,EAAAA,KAACmE,GAAWtB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACV+B,QAAS7E,EAAM6E,SACX7E,GAAK,IACToD,aAAcpD,EAAMuF,kBACpBC,UAAWxF,EAAMwF,cAEnBhF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,iBAAgBH,SAAA,EAC7BN,EAAAA,EAAAA,KAACgF,GAAQnC,EAAAA,EAAAA,GAAA,GAAK9C,KACdC,EAAAA,EAAAA,KAACwF,EAAgB,SAIzB,C,gDCHMC,EAAgB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GACpB,SAAAA,IAAe,IAADK,EAIV,OAJUC,EAAAA,EAAAA,GAAA,KAAAN,IACZK,EAAAF,EAAAI,KAAA,OAKFC,eAAiB,WACf,IAAIC,EAAYJ,EAAK/F,MAAMoG,OAAOC,OAAOF,UACpCA,IACHA,EAAY,OAEdJ,EAAK/F,MAAMsG,gBAAgBH,GAC3BJ,EAAK/F,MAAMuG,eAAeJ,EAC5B,EAXEJ,EAAKS,aAAe,CAClBC,SAAS,GACTV,CACJ,CA+BC,OA/BAW,EAAAA,EAAAA,GAAAhB,EAAA,EAAAiB,IAAA,oBAAA9F,MASD,WACE+F,KAAKJ,aAAe,CAAEC,SAAS,GAC/BG,KAAKV,gBACP,GAAC,CAAAS,IAAA,qBAAA9F,MACD,SAAmBgG,GAEfD,KAAK5G,MAAMoG,OAAOC,OAAOF,YAAcU,EAAUT,OAAOC,OAAOF,WAE/DS,KAAKV,gBAET,GAAC,CAAAS,IAAA,SAAA9F,MACD,WACE,OAAO+F,KAAKJ,aAAaC,SACvBxG,EAAAA,EAAAA,KAAC6G,EAAAA,EAAS,KAEV7G,EAAAA,EAAAA,KAACqF,GAAOxC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACN0C,UAAWoB,KAAKpC,eAChBK,SAAU+B,KAAK5G,MAAMoG,OAAOC,OAAOF,WAC/BS,KAAK5G,OAAK,IACdoD,aAAcwD,KAAKrB,oBAGzB,KAACG,CAAA,CArCmB,CAASqB,EAAAA,WA8C/B,OAAeC,EAAAA,EAAAA,KACbjF,EAAAA,EAAAA,KARF,SAAyBC,GACvB,MAAO,CACLK,QAASL,EAAMC,YAAYI,QAC3Bc,OAAQnB,EAAMC,YAAYkB,OAE9B,GAG2B,CACvBmD,gBAAAA,EAAAA,GACAW,WAAAA,EAAAA,GACAV,eAAAA,EAAAA,GACAhB,kBAAAA,EAAAA,GACAf,eAAAA,EAAAA,MCjEW,SAAoB0C,GAQjC,OAPA,SAAiClH,GAC/B,IAAImH,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXjB,GAASkB,EAAAA,EAAAA,MACb,OAAOtH,EAAAA,EAAAA,KAACiH,GAASpE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAK9C,GAAK,IAAEoG,OAAQ,CAAEe,SAAAA,EAAUE,SAAAA,EAAUhB,OAAAA,KAC7D,CAGF,GD2DEmB,EAAAA,EATF,CAUE9B,E","sources":["components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/SideInfo/SideInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/common/withRouter.js"],"sourcesContent":["import { Formik, Form } from \"formik\";\r\n\r\nexport default function MyPosts(props) {\r\n  let addPost = () => {\r\n    props.addPost();\r\n  };\r\n  let onPostChange = (e) => {\r\n    let text = e.target.value;\r\n    props.updatePostText(text);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"myPostsContainer\">\r\n        <PostInput addPost={addPost} onPostChange={onPostChange} {...props} />\r\n        <Post {...props} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport function PostInput(props) {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        post: \"\",\r\n      }}\r\n      onSubmit={() => {\r\n        props.addPost();\r\n      }}\r\n    >\r\n      <Form className=\"addPost\">\r\n        <h3>Add post</h3>\r\n        <div className=\"addPostForm\">\r\n          <input\r\n            placeholder=\"Write something...\"\r\n            type=\"text\"\r\n            value={props.newPostText}\r\n            onChange={props.onPostChange}\r\n            className=\"addPostField\"\r\n          />\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Publish\r\n          </button>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n}\r\nexport function Post(props) {\r\n  return (\r\n    <div className=\"myPosts\">\r\n      <h3>My posts</h3>\r\n      <div>{props.post}</div>\r\n    </div>\r\n  );\r\n}\r\n","import {\r\n  addPostActionCreator,\r\n  onPostChangeActionCreator,\r\n} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\nimport pfp from \"./../../../assets/profpic.avif\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  debugger;\r\n  return {\r\n    newPostText: state.profilePage.newPostText,\r\n    post: state.profilePage.postsData.map((p) => (\r\n      <PostView\r\n        photo={state.profilePage.profile.photos.small}\r\n        message={p.message}\r\n        likeCount={p.likeCount}\r\n        fullName={state.profilePage.profile.fullName}\r\n      />\r\n    )),\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: () => {\r\n      dispatch(addPostActionCreator());\r\n    },\r\n    updatePostText: (text) => {\r\n      dispatch(onPostChangeActionCreator(text));\r\n    },\r\n  };\r\n};\r\nexport function PostView(props) {\r\n  return (\r\n    <div className=\"postView\">\r\n      <div className=\"postUserData\">\r\n        {props.photo ? (\r\n          <img\r\n            src={props.photo}\r\n            alt=\"\"\r\n            srcset=\"\"\r\n            width={50}\r\n            className=\"postViewPfp\"\r\n          />\r\n        ) : (\r\n          <img src={pfp} alt=\"\" srcset=\"\" width={50} className=\"postViewPfp\" />\r\n        )}\r\n        <div>{\"@\" + props.fullName}</div>\r\n      </div>\r\n\r\n      <div>{props.message}</div>\r\n      <div>\r\n        <div className=\"likedData\">\r\n          <FontAwesomeIcon icon={faHeart} /> {props.likeCount}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function ProfileStatus({ status, updateStatus }) {\r\n  const [title, setTitle] = useState(status);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const onEditMode = () => setEditMode(true);\r\n\r\n  const offEditMode = () => {\r\n    updateStatus(title);\r\n    setEditMode(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTitle(status);\r\n  }, [status]);\r\n\r\n  const onChangeSetTitle = (e) => {\r\n    setTitle(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"statusContainer\">\r\n      {editMode ? (\r\n        <input\r\n          className=\"status status-field\"\r\n          autoFocus={true}\r\n          onBlur={offEditMode}\r\n          onChange={onChangeSetTitle}\r\n          value={title}\r\n        />\r\n      ) : (\r\n        <span className=\"status\" onDoubleClick={onEditMode}>\r\n          {title || \"no status\"}{\" \"}\r\n          {/* <FontAwesomeIcon icon={faEdit} onClick={onEditMode} /> */}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport pfp from \"./../../../assets/profpic.avif\";\r\nimport bg from \"./../../../assets/Rectangle 1.png\";\r\n\r\nimport x from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport { faCamera } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function ProfileInfo(props) {\r\n  const onPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhotoThunk(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const profilePic = props.profile.photos.small;\r\n  return (\r\n    <div className={x.description}>\r\n      <div className=\"profileTop\">\r\n        <img src={bg} alt=\"\" className=\"profileBg\" />\r\n        <div>\r\n          {!profilePic ? (\r\n            <div className=\"pfpContainer\">\r\n              <img src={pfp} alt=\"\" className=\"pfp\" />\r\n              {props.isOwner ? (\r\n                <label class=\"custom-file-upload\">\r\n                  <FontAwesomeIcon icon={faCamera} className=\"cam\" />\r\n\r\n                  <input\r\n                    className=\"changePfp\"\r\n                    type=\"file\"\r\n                    size={30}\r\n                    onChange={(e) => {\r\n                      onPhotoSelected(e);\r\n                    }}\r\n                  />\r\n                </label>\r\n              ) : null}\r\n            </div>\r\n          ) : (\r\n            <div className=\"pfpContainer\">\r\n              <img src={profilePic} alt=\"\" className=\"pfp\" />\r\n              {props.isOwner ? (\r\n                <label class=\"custom-file-upload\">\r\n                  <FontAwesomeIcon icon={faCamera} className=\"cam\" />\r\n                  <input\r\n                    className=\"changePfp\"\r\n                    type=\"file\"\r\n                    size={30}\r\n                    onChange={(e) => {\r\n                      onPhotoSelected(e);\r\n                    }}\r\n                  />\r\n                </label>\r\n              ) : null}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <ProfileStatus\r\n          status={props.status}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n        <div className=\"fullName\">{\"@\" + props.profile.fullName}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { faFaceAngry } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function SideInfo(props) {\r\n  return (\r\n    <div className=\"sideInfo\">\r\n      <AboutMe aboutMe={props.profile.aboutMe} />\r\n      <Contact />\r\n    </div>\r\n  );\r\n}\r\nexport function AboutMe(props) {\r\n  return (\r\n    <div className=\"aboutMe\">\r\n      <h4>About me</h4>\r\n      {props.aboutMe}\r\n    </div>\r\n  );\r\n}\r\nexport function Contact(props) {\r\n  return (\r\n    <div className=\"contact\">\r\n      <FontAwesomeIcon icon={faFaceAngry} />\r\n\r\n      <FontAwesomeIcon icon={faFaceAngry} />\r\n\r\n      <FontAwesomeIcon icon={faFaceAngry} />\r\n\r\n      <FontAwesomeIcon icon={faFaceAngry} />\r\n    </div>\r\n  );\r\n}\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport SideInfo from \"./SideInfo/SideInfo\";\r\nexport default function Profile(props) {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        {...props}\r\n        updateStatus={props.updateStatusThunk}\r\n        savePhoto={props.savePhoto}\r\n      />\r\n      <div className=\"profileContent\">\r\n        <SideInfo {...props} />\r\n        <MyPostsContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport {\r\n  setProfile,\r\n  getProfileThunk,\r\n  getStatusThunk,\r\n  updateStatusThunk,\r\n  savePhotoThunk,\r\n} from \"../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport withRouter from \"../common/withRouter\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport Preloader from \"../common/preloader/preloader\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.profileState = {\r\n      loading: true,\r\n    };\r\n  }\r\n  refreshProfile = () => {\r\n    let profileId = this.props.router.params.profileId;\r\n    if (!profileId) {\r\n      profileId = 29349;\r\n    }\r\n    this.props.getProfileThunk(profileId);\r\n    this.props.getStatusThunk(profileId);\r\n  };\r\n  componentDidMount() {\r\n    this.profileState = { loading: false };\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.router.params.profileId !== prevProps.router.params.profileId\r\n    ) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  render() {\r\n    return this.profileState.loading ? (\r\n      <Preloader />\r\n    ) : (\r\n      <Profile\r\n        savePhoto={this.savePhotoThunk}\r\n        isOwner={!this.props.router.params.profileId}\r\n        {...this.props}\r\n        updateStatus={this.updateStatusThunk}\r\n      />\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n  };\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getProfileThunk,\r\n    setProfile,\r\n    getStatusThunk,\r\n    updateStatusThunk,\r\n    savePhotoThunk,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nexport default function withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n"],"names":["PostInput","props","_jsx","Formik","initialValues","post","onSubmit","addPost","children","_jsxs","Form","className","placeholder","type","value","newPostText","onChange","onPostChange","Post","PostView","photo","src","alt","srcset","width","pfp","fullName","message","FontAwesomeIcon","icon","faHeart","likeCount","connect","state","profilePage","postsData","map","p","profile","photos","small","dispatch","addPostActionCreator","updatePostText","text","onPostChangeActionCreator","_Fragment","_objectSpread","e","target","ProfileStatus","_ref","status","updateStatus","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","editMode","setEditMode","useEffect","autoFocus","onBlur","currentTarget","onDoubleClick","ProfileInfo","onPhotoSelected","files","length","savePhotoThunk","profilePic","x","description","bg","isOwner","class","faCamera","size","SideInfo","AboutMe","aboutMe","Contact","faFaceAngry","Profile","updateStatusThunk","savePhoto","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","refreshProfile","profileId","router","params","getProfileThunk","getStatusThunk","profileState","loading","_createClass","key","this","prevProps","Preloader","React","compose","setProfile","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect"],"sourceRoot":""}