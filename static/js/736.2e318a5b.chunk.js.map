{"version":3,"file":"static/js/736.2e318a5b.chunk.js","mappings":"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","sources":["components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.js","webpack://first-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPostsForm.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/MyPosts/MyPosts.js","webpack://first-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/common/withRouter.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import x from \"./Post.module.css\";\r\nimport pfp from \"./../../../../assets/profpic.avif\";\r\nexport default function Post(props) {\r\n  return (\r\n    <div className={x.postWrapper}>\r\n      <img src={pfp} alt=\"\" srcset=\"\" width={50} />\r\n      <div className={x.post}>{props.message}</div>\r\n      <div>\r\n        <div className={x.like}>like {props.likeCount}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"MyPosts\":\"MyPosts_MyPosts__+PDCK\"};","import { Field, Form, Formik } from \"formik\";\r\nimport x from \"./MyPosts.module.css\";\r\nexport default function MyPostsForm(props) {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        post: \"\",\r\n      }}\r\n      onSubmit={() => {\r\n        props.addPost();\r\n      }}\r\n    >\r\n      <Form>\r\n        <div>my posts</div>\r\n        <Field\r\n          value={props.newPostText}\r\n          component=\"textarea\"\r\n          name=\"post\"\r\n          type=\"text\"\r\n          onChange={props.onPostChange}\r\n          placeholder=\"add new post...\"\r\n        />\r\n        <button type=\"submit\">add post!</button>\r\n        <div className={x.posts}>{props.postElements}</div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n}\r\n","import {\r\n  addPostActionCreator,\r\n  onPostChangeActionCreator,\r\n} from \"../../../redux/profileReducer\";\r\nimport Post from \"./Post/Post\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    newPostText: state.profilePage.newPostText,\r\n    postElements: state.profilePage.postsData.map((p) => (\r\n      <Post message={p.message} likeCount={p.likeCount} />\r\n    )),\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: () => {\r\n      dispatch(addPostActionCreator());\r\n    },\r\n    updatePostText: (text) => {\r\n      dispatch(onPostChangeActionCreator(text));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import MyPostsForm from \"./MyPostsForm\";\r\n\r\nexport default function MyPosts(props) {\r\n  let newPostText = props.newPostText;\r\n\r\n  let addPost = () => {\r\n    props.addPost();\r\n  };\r\n  let onPostChange = (e) => {\r\n    let text = e.target.value;\r\n    props.updatePostText(text);\r\n  };\r\n  return (\r\n    <MyPostsForm\r\n      onPostChange={onPostChange}\r\n      addPost={addPost}\r\n      newPostText={newPostText}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"ProfileInfo_img__TkNNE\"};","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function ProfileStatus({\r\n  fullName,\r\n  status,\r\n  aboutMe,\r\n  updateStatus,\r\n}) {\r\n  const [title, setTitle] = useState(status);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const onEditMode = () => setEditMode(true);\r\n\r\n  const offEditMode = () => {\r\n    updateStatus(title);\r\n    setEditMode(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTitle(status);\r\n  }, [status]);\r\n\r\n  const onChangeSetTitle = (e) => {\r\n    setTitle(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>{fullName}</p>\r\n      {editMode ? (\r\n        <input\r\n          autoFocus={true}\r\n          onBlur={offEditMode}\r\n          onChange={onChangeSetTitle}\r\n          value={title}\r\n        />\r\n      ) : (\r\n        <span onDoubleClick={onEditMode}>{title || \"no status\"}</span>\r\n      )}\r\n      <p>{aboutMe}</p>\r\n    </div>\r\n  );\r\n}\r\n","import pfp from \"./../../../assets/profpic.avif\";\r\nimport x from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nexport default function ProfileInfo(props) {\r\n  const onPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhotoThunk(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const profilePic = props.profile.photos.small;\r\n  return (\r\n    <div className={x.description}>\r\n      <img\r\n        src=\"https://w0.peakpx.com/wallpaper/223/577/HD-wallpaper-secluded-in-the-woods-hills-forest-house-grass-trees-mist-green-morning-landscape.jpg\"\r\n        alt=\"\"\r\n        className={x.img}\r\n      />\r\n      <div>\r\n        {!profilePic ? (\r\n          <img src={pfp} alt=\"\" srcset=\"\" width={100} />\r\n        ) : (\r\n          <img src={profilePic} alt=\"\" />\r\n        )}\r\n        <div>\r\n          {props.isOwner ? (\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) => {\r\n                onPhotoSelected(e);\r\n              }}\r\n            />\r\n          ) : null}\r\n        </div>\r\n        <ProfileStatus\r\n          fullName={props.profile.fullName}\r\n          status={props.status}\r\n          aboutMe={props.profile.aboutMe}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nexport default function Profile(props) {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        {...props}\r\n        updateStatus={props.updateStatusThunk}\r\n        savePhoto={props.savePhoto}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n","import Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport {\r\n  setProfile,\r\n  getProfileThunk,\r\n  getStatusThunk,\r\n  updateStatusThunk,\r\n  savePhotoThunk,\r\n} from \"../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport withRouter from \"../common/withRouter\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\nimport Preloader from \"../common/preloader/preloader\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.profileState = {\r\n      loading: true,\r\n    };\r\n  }\r\n  refreshProfile = () => {\r\n    let profileId = this.props.router.params.profileId;\r\n    if (!profileId) {\r\n      profileId = 29349;\r\n    }\r\n    this.props.getProfileThunk(profileId);\r\n    this.props.getStatusThunk(profileId);\r\n  };\r\n  componentDidMount() {\r\n    this.profileState = { loading: false };\r\n    this.refreshProfile();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.router.params.profileId !== prevProps.router.params.profileId\r\n    ) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  render() {\r\n    return this.profileState.loading ? (\r\n      <Preloader />\r\n    ) : (\r\n      <Profile\r\n        savePhoto={this.savePhotoThunk}\r\n        isOwner={!this.props.router.params.profileId}\r\n        {...this.props}\r\n        updateStatus={this.updateStatusThunk}\r\n      />\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n  };\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getProfileThunk,\r\n    setProfile,\r\n    getStatusThunk,\r\n    updateStatusThunk,\r\n    savePhotoThunk,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import { useLocation, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nexport default function withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return <Component {...props} router={{ location, navigate, params }} />;\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n"],"names":["Post","props","_jsxs","className","x","postWrapper","children","_jsx","src","pfp","alt","srcset","width","post","message","like","likeCount","MyPostsForm","Formik","initialValues","onSubmit","addPost","Form","Field","value","newPostText","component","name","type","onChange","onPostChange","placeholder","posts","postElements","connect","state","profilePage","postsData","map","p","dispatch","addPostActionCreator","updatePostText","text","onPostChangeActionCreator","_objectSpread","e","target","ProfileStatus","_ref","fullName","status","aboutMe","updateStatus","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","editMode","setEditMode","useEffect","autoFocus","onBlur","currentTarget","onDoubleClick","ProfileInfo","profilePic","profile","photos","small","description","img","isOwner","files","length","savePhotoThunk","onPhotoSelected","Profile","updateStatusThunk","savePhoto","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","refreshProfile","profileId","router","params","getProfileThunk","getStatusThunk","profileState","loading","_createClass","key","this","prevProps","Preloader","React","compose","setProfile","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect"],"sourceRoot":""}