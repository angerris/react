{"version":3,"file":"static/js/736.6bab60c1.chunk.js","mappings":"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","sources":["components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.js","webpack://first-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPostsForm.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/MyPosts/MyPosts.js","webpack://first-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/common/withRouter.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import x from \"./Post.module.css\";\r\nimport pfp from \"./../../../../assets/profpic.avif\";\r\nexport default function Post(props) {\r\n  return (\r\n    <div className={x.postWrapper}>\r\n      <img src={pfp} alt=\"\" srcset=\"\" width={50} />\r\n      <div className={x.post}>{props.message}</div>\r\n      <div>\r\n        <div className={x.like}>like {props.likeCount}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"MyPosts\":\"MyPosts_MyPosts__+PDCK\"};","import { Field, Form, Formik } from \"formik\";\r\nimport x from \"./MyPosts.module.css\";\r\nexport default function MyPostsForm(props) {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        post: \"\",\r\n      }}\r\n      onSubmit={() => {\r\n        props.addPost();\r\n      }}\r\n    >\r\n      <Form>\r\n        <div>my posts</div>\r\n        <Field\r\n          value={props.newPostText}\r\n          component=\"textarea\"\r\n          name=\"post\"\r\n          type=\"text\"\r\n          onChange={props.onPostChange}\r\n          placeholder=\"add new post...\"\r\n        />\r\n        <button type=\"submit\">add post!</button>\r\n        <div className={x.posts}>{props.postElements}</div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n}\r\n","import {\r\n  addPostActionCreator,\r\n  onPostChangeActionCreator,\r\n} from \"../../../redux/profileReducer\";\r\nimport Post from \"./Post/Post\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    newPostText: state.profilePage.newPostText,\r\n    postElements: state.profilePage.postsData.map((p) => (\r\n      <Post message={p.message} likeCount={p.likeCount} />\r\n    )),\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: () => {\r\n      dispatch(addPostActionCreator());\r\n    },\r\n    updatePostText: (text) => {\r\n      dispatch(onPostChangeActionCreator(text));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;\r\n","import MyPostsForm from \"./MyPostsForm\";\r\n\r\nexport default function MyPosts(props) {\r\n  let newPostText = props.newPostText;\r\n\r\n  let addPost = () => {\r\n    props.addPost();\r\n  };\r\n  let onPostChange = (e) => {\r\n    let text = e.target.value;\r\n    props.updatePostText(text);\r\n  };\r\n  return (\r\n    <MyPostsForm\r\n      onPostChange={onPostChange}\r\n      addPost={addPost}\r\n      newPostText={newPostText}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"ProfileInfo_img__TkNNE\",\"description\":\"ProfileInfo_description__0v8n1\"};","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function ProfileStatus({\r\n  fullName,\r\n  status,\r\n  aboutMe,\r\n  updateStatus,\r\n}) {\r\n  const [title, setTitle] = useState(status);\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const onEditMode = () => setEditMode(true);\r\n\r\n  const offEditMode = () => {\r\n    updateStatus(title);\r\n    setEditMode(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTitle(status);\r\n  }, [status]);\r\n\r\n  const onChangeSetTitle = (e) => {\r\n    setTitle(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>{fullName}</p>\r\n      {editMode ? (\r\n        <input\r\n          autoFocus={true}\r\n          onBlur={offEditMode}\r\n          onChange={onChangeSetTitle}\r\n          value={title}\r\n        />\r\n      ) : (\r\n        <span onDoubleClick={onEditMode}>{title || \"no status\"}</span>\r\n      )}\r\n      <p>{aboutMe}</p>\r\n    </div>\r\n  );\r\n}\r\n","import pfp from \"./../../../assets/profpic.avif\";\r\nimport x from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\nexport default function ProfileInfo(props) {\r\n  return (\r\n    <div className={x.description}>\r\n      <img\r\n        src=\"https://w0.peakpx.com/wallpaper/223/577/HD-wallpaper-secluded-in-the-woods-hills-forest-house-grass-trees-mist-green-morning-landscape.jpg\"\r\n        alt=\"\"\r\n        className={x.img}\r\n      />\r\n\r\n      <div>\r\n        <img src={pfp} alt=\"\" srcset=\"\" width={100} />\r\n        <ProfileStatus\r\n          fullName={props.profile.fullName}\r\n          status={props.status}\r\n          aboutMe={props.profile.aboutMe}\r\n          updateStatus={props.updateStatus}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nexport default function Profile(props) {\r\n  return (\r\n    <div>\r\n      <ProfileInfo {...props} updateStatus={props.updateStatusThunk} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n}\r\n","import Profile from \"./Profile\";\r\nimport React from \"react\";\r\nimport {\r\n  setProfile,\r\n  getProfileThunk,\r\n  getStatusThunk,\r\n  updateStatusThunk,\r\n} from \"../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport withRouter from \"../common/withRouter\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let profileId = this.props.router.params.profileId;\r\n    if (!profileId) {\r\n      profileId = 29349;\r\n    }\r\n    this.props.getProfileThunk(profileId);\r\n    this.props.getStatusThunk(profileId);\r\n  }\r\n  render() {\r\n    return <Profile {...this.props} updateStatus={this.updateStatusThunk} />;\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n  };\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getProfileThunk,\r\n    setProfile,\r\n    getStatusThunk,\r\n    updateStatusThunk,\r\n  }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);\r\n","import { useParams } from \"react-router-dom\";\r\n\r\nexport default function withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let params = useParams();\r\n    return <Component {...props} router={{ params }} />;\r\n  }\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n"],"names":["Post","props","_jsxs","className","x","postWrapper","children","_jsx","src","pfp","alt","srcset","width","post","message","like","likeCount","MyPostsForm","Formik","initialValues","onSubmit","addPost","Form","Field","value","newPostText","component","name","type","onChange","onPostChange","placeholder","posts","postElements","connect","state","profilePage","postsData","map","p","dispatch","addPostActionCreator","updatePostText","text","onPostChangeActionCreator","_objectSpread","e","target","ProfileStatus","_ref","fullName","status","aboutMe","updateStatus","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","editMode","setEditMode","useEffect","autoFocus","onBlur","currentTarget","onDoubleClick","ProfileInfo","description","img","profile","Profile","updateStatusThunk","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","profileId","this","router","params","getProfileThunk","getStatusThunk","React","compose","setProfile","Component","useParams","withAuthRedirect"],"sourceRoot":""}